<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>WhatsappChat</title>
  <link href='https://cdn.jsdelivr.net/npm/remixicon@4.1.0/fonts/remixicon.css' rel='stylesheet' />
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    /* Custom Scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
    }

    ::-webkit-scrollbar-track {
      background: transparent;
    }

    ::-webkit-scrollbar-thumb {
      background-color: rgba(0, 0, 0, 0.2);
      border-radius: 4px;
    }
  </style>
</head>

<body class="bg-gray-100">
  <main class="flex h-screen">
    <!-- Sidebar (Left Part) -->
    <div class="w-full md:w-1/3 lg:w-1/4 bg-gray-200 flex flex-col h-screen ">
      <!-- Top Section (Fixed) -->
      <div class="flex items-center justify-between p-5 bg-gray-300">
        <div class="flex items-center space-x-3">
          <img src="<%= user.profileImage %>" alt="User Image" class="w-10 h-10 rounded-full object-cover">
          <h1 class="text-gray-800 font-semibold">
            <%= user.username %>
          </h1>
        </div>
        <button class="text-gray-600 hover:text-gray-800">
          <i class="ri-more-2-line text-xl"></i>
        </button>
      </div>
  
      <!-- Search Bar (Fixed) -->
      <div class="p-4">
        <input type="text" placeholder="Search contacts"
          class="w-full px-4 py-2 rounded-full bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500">
      </div>
  
      <!-- Contacts List (Scrollable) -->
      <div class="flex-1 overflow-y-auto overflow-hidden px-4">
        <div class="users space-y-2">
          <!-- Contacts will be appended here -->
         
          <!-- More Contacts -->
        </div>
      </div>
    </div>
  
    <!-- Chat Section (Right Part) -->
    <div class="flex-1 bg-white flex flex-col h-screen lg:w-1/2">
      <!-- Default State (Fixed when no chat selected) -->
      <div class="flex-1 flex items-center justify-center" id="defaultState">
        <h2 class="text-gray-400">Select a chat to start messaging</h2>
      </div>
  
      <!-- Chat Content -->
      <div class="hidden flex-1 flex flex-col h-screen" id="chatContent">
        <!-- Chat Header (Fixed) -->
        <div class="flex items-center justify-between p-4 bg-gray-100 border-b border-gray-300">
          <div class="flex items-center space-x-3">
            <img src="" alt="Receiver Image" class="w-10 h-10 rounded-full object-cover" id="receiverImage">
            <div>
              <h1 class="text-gray-800 font-semibold" id="receiverName">Username</h1>
              <small class="text-green-500">Active now</small>
            </div>
          </div>
          <button class="text-gray-600 hover:text-gray-800">
            <i class="ri-more-2-line text-xl"></i>
          </button>
        </div>
  
        <!-- Messages Section (Scrollable) -->
        <div class="flex-1 overflow-y-auto overflow-hidden p-4 space-y-4 bg-gray-50" id="messagesContainer">
          <!-- Messages will be appended here -->
          <div class="p-2 bg-white rounded-lg shadow-sm">Example Message</div>
          <!-- More Messages -->
        </div>
  
        <!-- Message Input (Fixed at Bottom) -->
        <div class="bg-gray-100 p-4">
          <div class="flex items-center space-x-8">
            <input type="text" placeholder="Write your message"
              class="flex-1 px-4 py-2 rounded-full bg-white border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500"
              id="messageInput">
            <button class="bg-green-500 text-white px-4 py-2  rounded-3xl hover:bg-green-600 focus:outline-none"
              id="sendButton">
              <i class="ri-send-plane-2-fill text-xl"></i>
            </button>
          </div>  
        </div>
      </div>
    </div>
  </main>
  

  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.7.2/axios.min.js"
    integrity="sha512-JSCFHhKDilTRRXe9ak/FJ28dcpOJxzQaCd3Xg8MyF6XFjODhy/YMCM8HW0TFDckNHWUewW+kfvhin43hKtJxAw=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    var socket = io();
    var user = "<%= user.username %>"
    let receiver = null
    let receiverImage = null

    socket.emit('join', user)

    // Get Online Users
    axios.get('/getOnlineUser').then((response) => {
      response.data.onlineUsers.forEach((onlineUser) => {
        appendNewChat(onlineUser.profileImage, onlineUser.username)
      });
    }).catch((err) => {
      console.log(err)
    });

    // Append Outgoing Message
    function appendOutGoingMessage(message) {
      const messageTemplate = `
        <div class="flex justify-end">
          <div class="bg-green-500 text-white px-4 py-2 rounded-lg max-w-xs">
            <p>${message}</p>
          </div>
        </div>
      `
      const messages = document.getElementById('messagesContainer')
      const input = document.getElementById('messageInput')
      messages.innerHTML += messageTemplate
      input.value = ""
      messages.scrollTop = messages.scrollHeight
    }

    // Append Incoming Message
    function appendIncomingMessage(userImage, message) {
      const messageTemplate = `
        <div class="flex justify-start items-end space-x-2">
          <img src="${userImage}" alt="User Image" class="w-8 h-8 rounded-full object-cover">
          <div class="bg-white text-gray-800 px-4 py-2 rounded-lg max-w-xs shadow">
            <p>${message}</p>
          </div>
        </div>
      `
      const messages = document.getElementById('messagesContainer')
      messages.innerHTML += messageTemplate
      messages.scrollTop = messages.scrollHeight
    }

    // Send Message
    const sendButton = document.getElementById('sendButton')
    sendButton.addEventListener('click', () => {
      const input = document.getElementById('messageInput')
      const message = input.value.trim()
      if (message === "") return
      appendOutGoingMessage(message)

      socket.emit("sony", {
        sender: user,
        receiver: receiver,
        text: message
      })
    })

    // Listen for Incoming Messages
    socket.on("max", (messagePacket) => {
      if (messagePacket.sender.username == receiver)
        appendIncomingMessage(messagePacket.sender.profileImage, messagePacket.text)
    })

    // Append New Chat
    function appendNewChat(userImage, username) {
      const users = document.querySelector('.users')
      const userTemplate = `
        <div onClick="openChat('${userImage}', '${username}')" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-gray-300 cursor-pointer">
          <img src="${userImage}" alt="User Image" class="w-10 h-10 rounded-full object-cover">
          <h1 class="text-gray-800 font-medium">${username}</h1>
        </div>
      `
      users.innerHTML += userTemplate
    }

    // Open Chat
    function openChat(userImage, username) {
      receiver = username
      receiverImage = userImage

      // Update Header
      document.getElementById('receiverImage').src = userImage
      document.getElementById('receiverName').textContent = username

      // Show Chat Content
      document.getElementById('defaultState').classList.add('hidden')
      document.getElementById('chatContent').classList.remove('hidden')

      // Fetch Messages
      axios.get(`/getMessage?receiver=${receiver}`).then((response) => {
        const messagesContainer = document.getElementById('messagesContainer')
        messagesContainer.innerHTML = ""
        response.data.messages.forEach((message) => {
          if (message.sender == user) {
            appendOutGoingMessage(message.text)
          }
          else {
            appendIncomingMessage(receiverImage, message.text)
          }
        })
      })
    }

    // Send Message on Enter Key
    const messageInput = document.getElementById('messageInput')
    messageInput.addEventListener('keyup', (e) => {
      if (e.key === 'Enter') {
        sendButton.click()
      }
    })
  </script>
</body>

</html>